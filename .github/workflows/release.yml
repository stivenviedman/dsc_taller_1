name: Rolling Release Candidate

on:
  push:
    branches:
      - main

permissions:
  contents: write   # needed to create/edit releases

jobs:
  update-release-candidate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Fetch all tags
        run: git fetch --tags --force

      - name: Get last published release tag
        id: last_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag=$(gh release list --limit 1 --exclude-drafts --exclude-pre-releases --json tagName --jq '.[0].tagName' || echo "")
          echo "last_release=$tag" >> $GITHUB_ENV

      - name: Generate changelog since last release
        id: changelog
        run: |
          if [ -z "${{ env.last_release }}" ]; then
            log=$(git log --pretty=format:"- %s (%h)")
          else
            log=$(git log ${{ env.last_release }}..HEAD --pretty=format:"- %s (%h)")
          fi
          echo "changelog=$log" >> $GITHUB_ENV

      - name: Create or update Release Candidate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # ensure tag exists
          git tag -f rc
          git push origin rc --force

          # get changelog since last published release
          if gh release view rc >/dev/null 2>&1; then
            existing_notes=$(gh release view rc --json body --jq '.body')
          else
            existing_notes=""
          fi

          if [ -z "${{ env.last_release }}" ]; then
            new_log=$(git log --pretty=format:"- %s (%h)")
          else
            new_log=$(git log ${{ env.last_release }}..HEAD --pretty=format:"- %s (%h)")
          fi

          combined_notes="${existing_notes}"$'\n'"${new_log}"

          if gh release view rc >/dev/null 2>&1; then
            gh release edit rc \
              --draft \
              --prerelease \
              --title "Release Candidate" \
              --notes "$combined_notes"
          else
            gh release create rc \
              --draft \
              --prerelease \
              --title "Release Candidate" \
              --notes "$combined_notes"
          fi
