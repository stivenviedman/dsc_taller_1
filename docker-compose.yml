services:
  postgres:
    image: postgres:16
    container_name: my_postgres_container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: anb-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5433:5432" # Puerto maquina (pgadmin)local DB 5433 -> contenedor DB 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    build: ./backend
    container_name: my_go_backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: admin
      DB_NAME: anb-dev
      REDIS_HOST: redis
      REDIS_PORT: 6379
      S3_BUCKET: anb-videos
      AWS_REGION: us-east-1
    ports:
      - "8080:8080"
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/processed:/app/processed
      # Expects config and credential files
      - ~/.aws:/root/.aws:ro

  worker:
    build: ./backend
    container_name: my_go_worker
    command: ["./backend-worker"]
    depends_on:
      - redis
      - postgres
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: admin
      DB_NAME: anb-dev
      REDIS_HOST: redis
      REDIS_PORT: 6379
      S3_BUCKET: anb-videos
      AWS_REGION: us-east-1
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/processed:/app/processed
      # Expects config and credential files
      - ~/.aws:/root/.aws:ro

  frontend:
    build: ./ui
    container_name: my_next_frontend
    command: npm run dev
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8080
      API_BASE_URL: http://backend:8080
    volumes:
      - ./ui:/app
      - /app/node_modules
    depends_on:
      - backend

  redis:
    image: redis:7
    container_name: my_redis
    ports:
      - "6379:6379"

volumes:
  postgres_data:
